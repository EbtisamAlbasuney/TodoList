{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\AppSquare\\\\Refilex\\\\Todolist\\\\src\\\\modals\\\\EditTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTaskPopup = _ref => {\n  _s();\n\n  let {\n    modal,\n    toggle,\n    updateTask,\n    taskObj\n  } = _ref;\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj['Name'] = taskName;\n    tempObj['Description'] = description;\n    updateTask(tempObj);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: taskName,\n          onChange: handleChange,\n          name: \"taskName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          value: description,\n          onChange: handleChange,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditTaskPopup, \"b4Hnd14jJ9vnQOhTXdim/AJWE8M=\");\n\n_c = EditTaskPopup;\nexport default EditTaskPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTaskPopup\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditTaskPopup","modal","toggle","updateTask","taskObj","taskName","setTaskName","description","setDescription","handleChange","e","name","value","target","Name","Description","handleUpdate","preventDefault","tempObj"],"sources":["H:/React/AppSquare/Refilex/Todolist/src/modals/EditTask.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Task Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default EditTaskPopup;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;;AAEA,MAAMC,aAAa,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAACC,KAAD;IAAQC,MAAR;IAAgBC,UAAhB;IAA4BC;EAA5B,CAAyC;EAC5D,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMgB,YAAY,GAAIC,CAAD,IAAO;IAExB,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,CAAC,CAACG,MAAxB;;IAEA,IAAGF,IAAI,KAAK,UAAZ,EAAuB;MACnBL,WAAW,CAACM,KAAD,CAAX;IACH,CAFD,MAEK;MACDJ,cAAc,CAACI,KAAD,CAAd;IACH;EAGJ,CAXD;;EAaAlB,SAAS,CAAC,MAAM;IACZY,WAAW,CAACF,OAAO,CAACU,IAAT,CAAX;IACAN,cAAc,CAACJ,OAAO,CAACW,WAAT,CAAd;EACH,CAHQ,EAGP,EAHO,CAAT;;EAKA,MAAMC,YAAY,GAAIN,CAAD,IAAO;IACxBA,CAAC,CAACO,cAAF;IACA,IAAIC,OAAO,GAAG,EAAd;IACAA,OAAO,CAAC,MAAD,CAAP,GAAkBb,QAAlB;IACAa,OAAO,CAAC,aAAD,CAAP,GAAyBX,WAAzB;IACAJ,UAAU,CAACe,OAAD,CAAV;EACH,CAND;;EAQA,oBACI,QAAC,KAAD;IAAO,MAAM,EAAEjB,KAAf;IAAsB,MAAM,EAAEC,MAA9B;IAAA,wBACI,QAAC,WAAD;MAAa,MAAM,EAAEA,MAArB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAA,wBAEQ;QAAK,SAAS,EAAG,YAAjB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAG,cAA/B;UAA8C,KAAK,EAAIG,QAAvD;UAAiE,QAAQ,EAAII,YAA7E;UAA2F,IAAI,EAAG;QAAlG;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFR,eAMQ;QAAK,SAAS,EAAG,YAAjB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAU,IAAI,EAAG,GAAjB;UAAqB,SAAS,EAAG,cAAjC;UAAgD,KAAK,EAAIF,WAAzD;UAAsE,QAAQ,EAAIE,YAAlF;UAAgG,IAAI,EAAG;QAAvG;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANR;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAcI,QAAC,WAAD;MAAA,wBACA,QAAC,MAAD;QAAQ,KAAK,EAAC,SAAd;QAAwB,OAAO,EAAEO,YAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,EAC+D,GAD/D,eAEA,QAAC,MAAD;QAAQ,KAAK,EAAC,WAAd;QAA0B,OAAO,EAAEd,MAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CAnDD;;GAAMF,a;;KAAAA,a;AAqDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}