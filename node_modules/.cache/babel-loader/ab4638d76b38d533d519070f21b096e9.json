{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\AppSquare\\\\Refilex\\\\Todolist\\\\src\\\\modals\\\\ViewTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ViewTaskPopup = _ref => {\n  _s();\n\n  let {\n    modal,\n    toggle,\n    taskObj\n  } = _ref;\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"View Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Task Name:\", taskObj.Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Desc :\", taskObj.Description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewTaskPopup, \"b4Hnd14jJ9vnQOhTXdim/AJWE8M=\");\n\n_c = ViewTaskPopup;\nexport default ViewTaskPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewTaskPopup\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","ViewTaskPopup","modal","toggle","taskObj","taskName","setTaskName","description","setDescription","Name","Description"],"sources":["H:/React/AppSquare/Refilex/Todolist/src/modals/ViewTask.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst ViewTaskPopup = ({modal, toggle,  taskObj}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name)\r\n        setDescription(taskObj.Description)\r\n    },[])\r\n\r\n   \r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>View Task</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <p>Task Name:{taskObj.Name}</p>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <p>Desc :{taskObj.Description}</p>\r\n                        \r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n           \r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default ViewTaskPopup;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAAmE,YAAnE;;;AAEA,MAAMC,aAAa,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAACC,KAAD;IAAQC,MAAR;IAAiBC;EAAjB,CAA8B;EACjD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;EAGAC,SAAS,CAAC,MAAM;IACZW,WAAW,CAACF,OAAO,CAACK,IAAT,CAAX;IACAD,cAAc,CAACJ,OAAO,CAACM,WAAT,CAAd;EACH,CAHQ,EAGP,EAHO,CAAT;EAOA,oBACI,QAAC,KAAD;IAAO,MAAM,EAAER,KAAf;IAAsB,MAAM,EAAEC,MAA9B;IAAA,wBACI,QAAC,WAAD;MAAa,MAAM,EAAEA,MAArB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,SAAD;MAAA,wBAEQ;QAAK,SAAS,EAAG,YAAjB;QAAA,uBACI;UAAA,yBAAcC,OAAO,CAACK,IAAtB;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFR,eAKQ;QAAK,SAAS,EAAG,YAAjB;QAAA,uBACI;UAAA,qBAAUL,OAAO,CAACM,WAAlB;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QALR;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAaI,QAAC,WAAD;MAAA,uBAEA,QAAC,MAAD;QAAQ,KAAK,EAAC,WAAd;QAA0B,OAAO,EAAEP,MAAnC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAoBH,CAhCD;;GAAMF,a;;KAAAA,a;AAkCN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}